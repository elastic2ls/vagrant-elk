input {
	file {
		#change the path to point at your gatling log
		#path => "/vagrant/logs/gatling-test-result.log"
		path => "/vagrant/logs/gatling-small.log"
		start_position => "beginning"
		type => "gatling"
	}
}

filter {
	grok {
		patterns_dir => "/vagrant/configs-elk/patterns"
		match => [ "message", "%{GATLING}"]
		remove_field  => ["message"]
	}	 

	#ignor start and end events since they don't have any more information
	if [name] == "START" or [name] == "END" {
    drop { } 
  }

	date {
		match => ["requestStartDate", "UNIX_MS"]
		target => ["@timestamp"]
		remove_field => ["requestStartDate"]
	}
	if [requestEndDate] == "0" { 
		mutate {
			remove_field => ["requestEndDate"]
		}
	}else{
		date {
			match => ["requestEndDate", "UNIX_MS"]
			target => ["requestEndDate"]
		}
		#calculate duration
		ruby {
			code => "event['requestDuration'] = (event['requestEndDate'] - event['@timestamp']) * 1000 rescue nil"
		}
	}
	date {
		match => ["responseStartDate", "UNIX_MS"]
		target => ["responseStartDate"]
	}
	date {
		match => ["responseEndDate", "UNIX_MS"]
		target => ["responseEndDate"]
	}
	
	#calculate duration
	if [responseEndDate]{
		ruby {
			code => "event['responseDuration'] = (event['responseEndDate'] - event['responseStartDate']) * 1000 rescue nil"
		}
		ruby {
			code => "event['responseLatency'] = (event['responseStartDate'] - event['requestEndDate']) * 1000 rescue nil"
		}
		ruby {
			code => "event['responseTime'] = (event['responseEndDate'] - event['@timestamp']) * 1000 rescue nil"
		}
		mutate {
			convert => {
				"requestDuration" => "integer"
				"responseDuration" => "integer"
				"responseLatency" => "integer"
				"responseTime" => "integer"
			}
			remove_field => [ "requestEndDate", "responseStartDate", "responseEndDate" ]
		}
	}

	if ([msg] and [msg] != " "){
		mutate {
			rename => ["msg", "message"]
		}
	}else{
		mutate {
			remove_field => [ "msg" ]
		}
	}
}

output {
	# elasticsearch {
	# 	host => localhost
	# }
	stdout {
		codec => rubydebug
	}
}